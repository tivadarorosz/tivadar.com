// ==============================================
// BOTTOM CTA COMPONENT
// ==============================================

@use '../variables' as *;

// Support both new and existing class names
.bottom-cta-section,
.pricing-cta-section {
  text-align: center;
  margin: 6rem auto 4rem;
  padding-left: var(--side-padding);
  padding-right: var(--side-padding);
  
  @media (min-width: $breakpoint-sm) {
    margin: 8rem auto 6rem;
    max-width: 600px;
  }
}

// Homepage CTA has different margins
.cta-section {
  text-align: center;
  margin: 6rem auto 8rem;
  padding-left: var(--side-padding);
  padding-right: var(--side-padding);
  
  @media (min-width: $breakpoint-sm) {
    margin: 8rem auto 10rem;
    max-width: 600px;
  }
}

.bottom-cta-title,
.pricing-cta-title {
  font-family: var(--font-primary);
  font-weight: var(--font-weight-medium);
  color: var(--color-black);
  margin: 0 0 2rem 0;
  line-height: var(--line-height-subheading);
  
  // Default font size (non-fluid)
  font-size: var(--font-size-h2);
  
  // When fluid classes are applied, they will override the font size
  &.fluid-cta-title, &.fluid-h2 {
    // Font size will be set by the utility class
  }
}

// Large variant (non-fluid)
.bottom-cta-title--large,
.pricing-cta-title--large {
  font-size: var(--font-size-h1) !important;
  
  // When fluid classes are applied, they will override the font size
  &.fluid-cta-title, &.fluid-h1 {
    // Font size will be set by the utility class
  }
}

// Homepage CTA title (legacy) - should be replaced with bottom-cta-title--large
.cta-title {
  font-family: var(--font-primary) !important;
  font-weight: var(--font-weight-medium) !important;
  color: var(--color-black) !important;
  margin: 0 0 2rem !important;
  line-height: var(--line-height-subheading) !important;
  
  // Default size (non-fluid)
  font-size: var(--font-size-h1) !important;
  
  // When fluid classes are applied, they will override the font size
  &.fluid-cta-title, &.fluid-h1 {
    // !important not needed here as the utility class will have higher specificity
  }
}

// Container for double button version
.bottom-cta-buttons,
.cta-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  
  .btn {
    min-width: 180px;
  }
  
  @media (max-width: $breakpoint-sm) {
    flex-direction: column;
    gap: 1.5rem;
    
    .btn {
      width: 100%;
      max-width: 280px;
    }
  }
  
  @media (min-width: $breakpoint-sm) {
    flex-wrap: nowrap;
    
    .btn:first-child {
      min-width: 180px !important;
    }
  }
}

// Inverted wrapper for full-width background
.bottom-cta-inverted-wrapper {
  background-color: var(--color-black);
  width: 100%;
  margin: 0;
}

// Inverted version needs different structure
.bottom-cta-section.bottom-cta-section--inverted {
  color: var(--color-background-light);
  max-width: 600px;
  padding-top: 8rem;
  padding-bottom: 6rem;
  margin: 0 auto;
  text-align: center;
  
  @media (min-width: $breakpoint-sm) {
    padding-top: 12rem;
    padding-bottom: 8rem;
  }
  
  .bottom-cta-title {
    color: var(--color-background-light);
    font-family: var(--font-primary);
    font-weight: var(--font-weight-medium);
    font-size: var(--font-size-h1);  // Using new typography scale
    margin: 0 0 2rem 0;
    line-height: var(--line-height-subheading);
  }
}